{"ast":null,"code":"var _jsxFileName = \"/Users/adityamathew/dev/infinitive_work/bias-detection-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Line, Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [currentArticle, setCurrentArticle] = useState(null);\n  const [graphData, setGraphData] = React.useState({\n    datasets: [{\n      label: 'Articles',\n      data: [],\n      backgroundColor: 'rgba(255, 99, 132, 1)'\n    }]\n  });\n  const articleColors = ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'];\n\n  // Fetch articles\n  const fetchArticles = () => {\n    fetch(\"/api/articles\").then(res => res.json()).then(data => setArticles(data.articles)).catch(error => console.error('Error fetching articles:', error));\n  };\n\n  // Function to fetch a single article\n  const fetchArticle = id => {\n    setCurrentArticle(null); // Clear the current article\n    fetch(`/api/articles/${id}`).then(res => res.json()).then(data => setCurrentArticle(data)).catch(error => console.error(`Error fetching article with id ${id}:`, error));\n  };\n\n  // Fetch articles on mount\n  React.useEffect(() => {\n    fetchArticles();\n  }, []);\n\n  // Handler for when an article button is clicked\n  const handleArticleClick = article => {\n    console.log(article);\n    const newPoint = {\n      x: article.polarity,\n      y: article.subjectivity,\n      label: article.title\n    };\n    setGraphData(prevGraphData => ({\n      datasets: [{\n        ...prevGraphData.datasets[0],\n        data: [...prevGraphData.datasets[0].data, newPoint],\n        backgroundColor: articleColors[article.id - 1] // Use the color corresponding to the article\n      }]\n    }));\n  };\n\n  // Scatter plot data and options\n  const scatterData = {\n    datasets: []\n  };\n  const scatterOptions = {\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'bottom',\n        title: {\n          display: true,\n          text: 'Polarity (Negative vs Positive Sentiment)'\n        },\n        min: -1,\n        max: 1,\n        ticks: {\n          stepSize: 0.25\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Subjectivity (Opinion vs Fact)'\n        },\n        min: 0,\n        max: 1,\n        ticks: {\n          stepSize: 0.2\n        }\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Article Subjectivity and Polarity'\n      },\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return context.dataset.label || '';\n          }\n        }\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: /*#__PURE__*/_jsxDEV(Scatter, {\n          data: graphData,\n          options: scatterOptions\n        }, Date.now(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article-buttons\",\n        children: articles.map((article, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"article-button\",\n          onClick: () => handleArticleClick(article),\n          style: {\n            backgroundColor: articleColors[index % articleColors.length]\n          } // Set the background color from the array\n          ,\n          children: article.title\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), currentArticle && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentArticle.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentArticle.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"t/Yr3KDwbaK7vjQJ1J8RqFZfwQ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","Line","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","useState","useEffect","jsxDEV","_jsxDEV","register","App","_s","articles","setArticles","currentArticle","setCurrentArticle","graphData","setGraphData","datasets","label","data","backgroundColor","articleColors","fetchArticles","fetch","then","res","json","catch","error","console","fetchArticle","id","handleArticleClick","article","log","newPoint","x","polarity","y","subjectivity","title","prevGraphData","scatterData","scatterOptions","scales","type","position","display","text","min","max","ticks","stepSize","plugins","legend","tooltip","callbacks","context","dataset","responsive","maintainAspectRatio","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","options","Date","now","map","index","onClick","style","length","content","_c","$RefreshReg$"],"sources":["/Users/adityamathew/dev/infinitive_work/bias-detection-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Line, Scatter } from \"react-chartjs-2\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nimport { useState, useEffect } from \"react\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nfunction App() {\n    const [articles, setArticles] = useState([]);\n    const [currentArticle, setCurrentArticle] = useState(null);\n\n    const [graphData, setGraphData] = React.useState({\n        datasets: [{\n            label: 'Articles',\n            data: [],\n            backgroundColor: 'rgba(255, 99, 132, 1)'\n        }]\n    });\n\n    const articleColors = ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'];\n\n    // Fetch articles\n    const fetchArticles = () => {\n        fetch(\"/api/articles\")\n            .then((res) => res.json())\n            .then((data) => setArticles(data.articles))\n            .catch((error) => console.error('Error fetching articles:', error));\n    };\n\n    // Function to fetch a single article\n    const fetchArticle = (id) => {\n        setCurrentArticle(null); // Clear the current article\n        fetch(`/api/articles/${id}`)\n            .then((res) => res.json())\n            .then((data) => setCurrentArticle(data))\n            .catch((error) => console.error(`Error fetching article with id ${id}:`, error));\n    };\n\n    // Fetch articles on mount\n    React.useEffect(() => {\n        fetchArticles();\n    }, []);\n\n    // Handler for when an article button is clicked\n    const handleArticleClick = (article) => {\n        console.log(article);\n        const newPoint = {\n            x: article.polarity,\n            y: article.subjectivity,\n            label: article.title\n        };\n\n        setGraphData((prevGraphData) => ({\n            datasets: [\n                {\n                    ...prevGraphData.datasets[0],\n                    data: [...prevGraphData.datasets[0].data, newPoint],\n                    backgroundColor: articleColors[article.id - 1], // Use the color corresponding to the article\n                },\n            ],\n        }));\n    };\n\n    // Scatter plot data and options\n    const scatterData = {\n        datasets: [],\n    };\n\n    const scatterOptions = {\n        scales: {\n            x: {\n                type: 'linear',\n                position: 'bottom',\n                title: {\n                    display: true,\n                    text: 'Polarity (Negative vs Positive Sentiment)',\n                },\n                min: -1,\n                max: 1,\n                ticks: {\n                    stepSize: 0.25,\n                },\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'Subjectivity (Opinion vs Fact)',\n                },\n                min: 0,\n                max: 1,\n                ticks: {\n                    stepSize: 0.2,\n                },\n            },\n        },\n        plugins: {\n            title: {\n                display: true,\n                text: 'Article Subjectivity and Polarity',\n            },\n            legend: {\n                display: false,\n            },\n            tooltip: {\n                callbacks: {\n                    label: function(context) {\n                        return context.dataset.label || '';\n                    }\n                }\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <div className=\"graph-container\">\n                    <Scatter key={Date.now()} data={graphData} options={scatterOptions} />\n                </div>\n\n                <div className=\"article-buttons\">\n                    {articles.map((article, index) => (\n                        <button\n                            key={article.id}\n                            className=\"article-button\"\n                            onClick={() => handleArticleClick(article)}\n                            style={{ backgroundColor: articleColors[index % articleColors.length] }} // Set the background color from the array\n                        >\n                            {article.title}\n                        </button>\n                    ))}\n                </div>\n\n                {currentArticle && (\n                    <div className=\"article-info\">\n                        <h2>{currentArticle.title}</h2>\n                        <p>{currentArticle.content}</p>\n                    </div>\n                )}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}